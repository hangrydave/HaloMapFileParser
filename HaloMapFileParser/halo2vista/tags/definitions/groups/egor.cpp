#include "egor.h"

using namespace tag_definitions;

namespace tag_definitions
{
	tag_collection* egor_group = new tag_collection(
		"egor",
		{
		
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Shader", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			undefined_tag("Unknown", 9999),
			block_tag("Pass References",
			{
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				short_tag("Layer Pass Index"),
				short_tag("If Primary Equals 0 And Secondary Equals 0"),
				short_tag("If Primary Greater Than 0 And Secondary Equals 0"),
				short_tag("If Primary Equals 0 And Secondary Greater Than 0"),
				short_tag("If Primary Greater Than 0 And Secondary Greater Than 0"),
				short_tag("Unknown"),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				undefined_tag("Unknown", 9999),
				short_tag("Stage 0 Mode"),
				short_tag("Stage 1 Mode"),
				short_tag("Stage 2 Mode"),
				short_tag("Stage 3 Mode"),
				block_tag("Advanced Control",
				{
					undefined_tag("Target", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					undefined_tag("Unknown", 9999),
					block_tag("Convolution",
					{
						short_tag("Flags"),
						short_tag("Unknown"),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						undefined_tag("Unknown", 9999),
						long_tag("Convolution Amount"),
						long_tag("Filter Scale"),
						long_tag("Filter Box Factor"),
						long_tag("Zoom Falloff Radius"),
						long_tag("Zoom Cutoff Radius"),
						long_tag("Resolution Scale"),
					}),
				}),
			}),
	});
};
